{
  "stats": {
    "suites": 3,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2020-06-28T18:28:29.627Z",
    "end": "2020-06-28T18:28:29.628Z",
    "duration": 148387,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "56bd62ef-1cd0-478e-99ee-ca9b8bd2ec87",
      "title": "",
      "fullFile": "cypress/integration/autenticacion.feature",
      "file": "cypress/integration/autenticacion.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0e7e06e-0a21-424e-86ea-d4f191cb8ddf",
          "title": "Proceso de autenticacion",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visitar la pagina",
              "fullTitle": "Proceso de autenticacion Visitar la pagina",
              "timedOut": null,
              "duration": 20730,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "Error: Image was 2.841969696969697% different from saved snapshot with 18757 different pixels.\nSee diff for details: /Users/juan.camargo/Documents/los3mostesteros/cypress/snapshots/autenticacion.feature/__diff_output__/Proceso de autenticacion -- Visitar la pagina.diff.png",
                "estack": "Error: Image was 2.841969696969697% different from saved snapshot with 18757 different pixels.\nSee diff for details: /Users/juan.camargo/Documents/los3mostesteros/cypress/snapshots/autenticacion.feature/__diff_output__/Proceso de autenticacion -- Visitar la pagina.diff.png\n    at Context.eval (http://34.69.212.3/__cypress/tests?p=cypress/support/index.js:138:17)",
                "diff": null
              },
              "uuid": "6ed85df2-63e6-4e58-a7c4-de22ca4d7b97",
              "parentUUID": "e0e7e06e-0a21-424e-86ea-d4f191cb8ddf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6ed85df2-63e6-4e58-a7c4-de22ca4d7b97"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "24776f7f-cefa-4198-bbc7-a63b6c7e9998",
      "title": "",
      "fullFile": "cypress/integration/horasTrabajadas.feature",
      "file": "cypress/integration/horasTrabajadas.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38fe0f1f-3217-4742-a44e-b7d04f105170",
          "title": "Pagina de manejo de tiempos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Crear un registro",
              "fullTitle": "Pagina de manejo de tiempos Crear un registro",
              "timedOut": null,
              "duration": 21988,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6f758d8c-47cb-4154-a35b-a6013bb9b9a8",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Editar un registro",
              "fullTitle": "Pagina de manejo de tiempos Editar un registro",
              "timedOut": null,
              "duration": 19003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9137b8ef-ece3-4410-8a88-b26910b17cd7",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "eliminar registro",
              "fullTitle": "Pagina de manejo de tiempos eliminar registro",
              "timedOut": null,
              "duration": 15599,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1d5880f6-0558-4fb0-aeea-acfe0edcbc8b",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "El usuario ve las horas registradas (example #1)",
              "fullTitle": "Pagina de manejo de tiempos El usuario ve las horas registradas (example #1)",
              "timedOut": null,
              "duration": 17160,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c4f93043-814f-4103-a62e-04b41c63e96e",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "El usuario ve las horas registradas (example #2)",
              "fullTitle": "Pagina de manejo de tiempos El usuario ve las horas registradas (example #2)",
              "timedOut": null,
              "duration": 13891,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f48a380f-3e41-496a-836d-4434bf04fd2d",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "El usuario ve las horas registradas (example #3)",
              "fullTitle": "Pagina de manejo de tiempos El usuario ve las horas registradas (example #3)",
              "timedOut": null,
              "duration": 14875,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c6835bfa-3ddc-47d9-8605-204b03e5b24f",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "El usuario consulta con una fecha especifica",
              "fullTitle": "Pagina de manejo de tiempos El usuario consulta con una fecha especifica",
              "timedOut": null,
              "duration": 22725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6af05c99-4b1a-4202-b819-8ab13f9d4749",
              "parentUUID": "38fe0f1f-3217-4742-a44e-b7d04f105170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f758d8c-47cb-4154-a35b-a6013bb9b9a8",
            "9137b8ef-ece3-4410-8a88-b26910b17cd7",
            "1d5880f6-0558-4fb0-aeea-acfe0edcbc8b",
            "c4f93043-814f-4103-a62e-04b41c63e96e",
            "f48a380f-3e41-496a-836d-4434bf04fd2d",
            "c6835bfa-3ddc-47d9-8605-204b03e5b24f",
            "6af05c99-4b1a-4202-b819-8ab13f9d4749"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 125241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e595d535-a376-4a22-af75-7eb9880a1fb4",
      "title": "",
      "fullFile": "cypress/integration/api.feature",
      "file": "cypress/integration/api.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "daab8661-b7a4-4816-a52a-3adf65766c95",
          "title": "API testing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Crear un registro valido",
              "fullTitle": "API testing Crear un registro valido",
              "timedOut": null,
              "duration": 872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1ce75f6-e2bf-4664-81ad-bb6ebb7818e6",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Modificar un registro",
              "fullTitle": "API testing Modificar un registro",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4c3c9523-c6ca-49b5-a172-10f60a98a7f0",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "listar las horas laboradas (example #1)",
              "fullTitle": "API testing listar las horas laboradas (example #1)",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "3ced23e3-0d60-49c8-9a59-e476ce6281ef",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "listar las horas laboradas (example #2)",
              "fullTitle": "API testing listar las horas laboradas (example #2)",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "68b31aac-0338-4b46-ace1-d6c604992ce1",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "listar las horas laboradas (example #3)",
              "fullTitle": "API testing listar las horas laboradas (example #3)",
              "timedOut": null,
              "duration": 223,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "4a8569f9-aee8-4cca-a1a3-b68b219a9782",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Eliminar un registro",
              "fullTitle": "API testing Eliminar un registro",
              "timedOut": null,
              "duration": 459,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2faecda5-5844-4c6f-bc69-4d7eac91781f",
              "parentUUID": "daab8661-b7a4-4816-a52a-3adf65766c95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1ce75f6-e2bf-4664-81ad-bb6ebb7818e6",
            "4c3c9523-c6ca-49b5-a172-10f60a98a7f0",
            "3ced23e3-0d60-49c8-9a59-e476ce6281ef",
            "68b31aac-0338-4b46-ace1-d6c604992ce1",
            "4a8569f9-aee8-4cca-a1a3-b68b219a9782",
            "2faecda5-5844-4c6f-bc69-4d7eac91781f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2416,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}